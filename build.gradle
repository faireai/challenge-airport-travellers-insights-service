plugins {
  id 'org.springframework.boot' version '2.7.1'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'jacoco'
  id 'checkstyle'
  id 'idea'
}

group = 'ai.faire.challenge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntimeOnly.extendsFrom runtimeOnly
  contractTestImplementation.extendsFrom testImplementation
  contractTestRuntimeOnly.extendsFrom runtimeOnly
}

sourceSets {
  integrationTest {
    compileClasspath += sourceSets.main.output
    compileClasspath += sourceSets.test.output
    runtimeClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.test.output
  }
}

repositories {
  mavenCentral()
}

ext.versions = [
  checkstyleVersion: "8.39"
]

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
  // TEST
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
  useJUnitPlatform()
  jacoco {
    destinationFile = file("$buildDir/jacoco/${name}.exec")
  }
}

task integrationTest(type: Test, description: 'Runs integration tests.', group: LifecycleBasePlugin.VERIFICATION_GROUP) {
  useJUnitPlatform()
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  shouldRunAfter test
  jacoco {
    destinationFile = file("$buildDir/jacoco/integrationTest.exec")
  }
  testLogging {
    events "failed"
    exceptionFormat "full"
    showStandardStreams = true
  }
}

// JACOCO
jacoco {
  toolVersion = '0.8.7'
}
tasks.withType(Test) {
  finalizedBy jacocoTestReport
}

ext {
  jacocoMergedReport = file("$buildDir/jacoco/mergeTest.exec")
}

task jacocoMergeTestReport(type: JacocoMerge) {
  executionData tasks.withType(Test)
  destinationFile = jacocoMergedReport
}

jacocoTestReport {
  dependsOn jacocoMergeTestReport
  executionData jacocoMergedReport
  reports {
    xml.enabled true
    csv.enabled false
    html.enabled true
    html.destination file("${buildDir}/reports/jacocoHtml")
  }
}

// CHECKSTYLE
checkstyle {
  toolVersion = "${versions.checkstyleVersion}"
}
checkstyleMain.source = "src/main/java"
checkstyleTest.source = "src/test/java"
checkstyleIntegrationTest.source = "src/integrationTest/java"

idea {
  module {
    testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
  }
}
